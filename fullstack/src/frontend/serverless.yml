# 欢迎使用 ⚡️serverless⚡️ 组件
#
# serverless组件是基于具体使用场景(Express, 静态网站等)提供的定制云资源编排和组织的解决方案。
# 这是serverless的主要配置文件，包含了一些使用示例以及注释说明。
# 您只需几行配置描述，即可进行云函数、API 网关、COS、DB 等
# Serverless 资源进行快速创建、部署和修改。
#
# 有关完整的配置选项，请检查文档：
# https://cloud.tencent.com/document/product/1154/51080
#
# 使用愉快

# ##应用信息##
component: website # [必选]使用组件的名称，更多在 https://github.com/serverless-components
name: fullstack-frontendr # [必选]组件的实例名称
app: fullstack-serverless-frontend # app应用名称(同账号下应用名称唯一)。留空则取当前组件的实例名称。如果项目根目录中的配置文件存在此字段，会继承根目录配置文件中相应字段的值
# stage: dev # app 环境字段，留空默认值为dev。如果项目根目录中的配置文件存在此字段，会继承根目录配置文件中相应字段的值

# ##website 组件配置##
# 更多内容请查看：https://github.com/serverless-components/tencent-website/blob/master/docs/configure.md
inputs:
  region: ${env:REGION} # 云函数所在区域
  bucketName: fullstack-serverless-frontend # Bucket 名称。 不允许大写字母。如果你不加 AppId 后缀，则默认自动会为你加上。
  protocol: https # 请求协议。https 或 http
  src: # 该项目的代码信息，参数参考执行目录
    src: ./ # 你构建的项目代码目录。
    hook: npm run build # 钩子脚本。在你项目代码上传之前执行
    dist: ./dist # 钩子脚本执行构建后，输出的目录。如果配置 hook， 此参数必填
    envPath: ./ # 生成的 env.js 存放在你项目中的路径。默认是当前工作路径。
    index: index.html # 网站 index 页面
    error: index.html # 网站 error 页面
  env: # 环境变量参数文件。会将 env 下配置的参数写入 env.js 文件中，将该文件打包上传到你的代码里。
    # get api url after below api service deployed.
    apiUrl: ${output:${stage}:${app}:fullstack-api.apigw.url}
